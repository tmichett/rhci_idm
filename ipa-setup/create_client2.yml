---
# create_client2.yml
# Artur Glogowski <aglogows@redhat.com>
# Steve Bonneville <sbonnevi@redhat.com>

- hosts: all

  vars:
    ipa_server: utility.lab.example.com
    ipa_domain: lab.example.com
    ipa_realm: LAB.EXAMPLE.COM
    ipa_otp_password: hippo
    ipa_admin_password: redhat321
    ipa_client_packages:
      - freeipa-client
      - ipa-admintools

  tasks:

    - name: FreeIPA client packages installed
      yum:
        name: "{{ ipa_client_packages }}"
        state: present

    - name: Get Kerberos credentials as IPA superuser "admin"
      command: kinit -f admin
      args:
        stdin: "{{ ipa_admin_password }}"
      changed_when: false
      delegate_to: "{{ ipa_server }}"

    - name: Set up host account on FreeIPA server
      command: ipa host-add {{ ansible_fqdn }} --password={{ ipa_otp_password }} --force
      ignore_errors: true
      delegate_to: "{{ ipa_server }}"

    - name: Host is unregistered from development hostgroup
      command: ipa hostgroup-remove-member --hosts={{ ansible_fqdn }} development
      when: ansible_fqdn == 'servera.lab.example.com' or ansible_fqdn == 'serverb.lab.example.com'
      ignore_errors: true
      delegate_to: "{{ ipa_server }}"

    - name: Host is unregistered from production hostgroup
      command: ipa hostgroup-remove-member --hosts={{ ansible_fqdn }} production
      when: ansible_fqdn == 'servere.lab.example.com' or ansible_fqdn == 'serverf.lab.example.com'
      ignore_errors: true
      delegate_to: "{{ ipa_server }}"

    - name: Host is registered to development hostgroup
      command: ipa hostgroup-add-member --hosts={{ ansible_fqdn }} development
      when: ansible_fqdn == 'servere.lab.example.com' or ansible_fqdn == 'serverf.lab.example.com'
      ignore_errors: true
      delegate_to: "{{ ipa_server }}"

    - name: Host is registered to testing hostgroup
      command: ipa hostgroup-add-member --hosts={{ ansible_fqdn }} testing
      when: ansible_fqdn == 'serverc.lab.example.com' or ansible_fqdn == 'serverd.lab.example.com'
      ignore_errors: true
      delegate_to: "{{ ipa_server }}"

    - name: Host is registered to production hostgroup
      command: ipa hostgroup-add-member --hosts={{ ansible_fqdn }} production
      when: ansible_fqdn == 'servera.lab.example.com' or ansible_fqdn == 'serverb.lab.example.com'
      ignore_errors: true
      delegate_to: "{{ ipa_server }}"
